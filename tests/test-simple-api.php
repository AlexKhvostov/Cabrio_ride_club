<?php
/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 */

// –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üß™ –¢–µ—Å—Ç API</h1>";

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
echo "<h2>1. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î</h2>";
try {
    require_once '../backend/config.php';
    define('API_ACCESS', true);
    
    $pdo = getDbConnection();
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ<br>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    $tables = ['members', 'cars', 'invitations'];
    foreach ($tables as $table) {
        $stmt = $pdo->query("SHOW TABLES LIKE '$table'");
        if ($stmt->rowCount() > 0) {
            echo "‚úÖ –¢–∞–±–ª–∏—Ü–∞ $table —Å—É—â–µ—Å—Ç–≤—É–µ—Ç<br>";
        } else {
            echo "‚ùå –¢–∞–±–ª–∏—Ü–∞ $table –Ω–µ –Ω–∞–π–¥–µ–Ω–∞<br>";
        }
    }
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ –ë–î: " . $e->getMessage() . "<br>";
}

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint
echo "<h2>2. –¢–µ—Å—Ç API endpoint</h2>";
try {
    // –°–∏–º—É–ª–∏—Ä—É–µ–º POST –∑–∞–ø—Ä–æ—Å
    $_SERVER['REQUEST_METHOD'] = 'POST';
    $_GET['action'] = 'check_car_number';
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    $testData = json_encode(['reg_number' => '70MX']);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π input stream
    $originalInput = file_get_contents('php://input');
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    $tempFile = tmpfile();
    fwrite($tempFile, $testData);
    rewind($tempFile);
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º stdin
    $originalStdin = STDIN;
    define('STDIN', $tempFile);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º API
    ob_start();
    include '../backend/api.php';
    $output = ob_get_clean();
    
    echo "üìã –í—ã–≤–æ–¥ API:<br>";
    echo "<pre>" . htmlspecialchars($output) . "</pre>";
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º stdin
    fclose($tempFile);
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ API: " . $e->getMessage() . "<br>";
}

// –¢–µ—Å—Ç 3: –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –ë–î
echo "<h2>3. –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –ë–î</h2>";
try {
    $pdo = getDbConnection();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—à–∏–Ω—ã
    $stmt = $pdo->prepare("
        SELECT c.reg_number, m.status as member_status
        FROM cars c
        JOIN members m ON c.member_id = m.id
        WHERE REPLACE(UPPER(c.reg_number), ' ', '') LIKE UPPER(?)
          AND m.status IN ('–∞–∫—Ç–∏–≤–Ω—ã–π', '—É—á–∞—Å—Ç–Ω–∏–∫', '–Ω–æ–≤—ã–π')
        LIMIT 1
    ");
    $stmt->execute(['%70MX%']);
    $memberCar = $stmt->fetch();
    
    if ($memberCar) {
        echo "‚úÖ –ù–∞–π–¥–µ–Ω–∞ –º–∞—à–∏–Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞:<br>";
        echo "- –ù–æ–º–µ—Ä: " . $memberCar['reg_number'] . "<br>";
        echo "- –°—Ç–∞—Ç—É—Å: " . $memberCar['member_status'] . "<br>";
    } else {
        echo "‚ùå –ú–∞—à–∏–Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞<br>";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    $stmt = $pdo->prepare("
        SELECT i.car_number, i.status as invitation_status
        FROM invitations i
        WHERE REPLACE(UPPER(i.car_number), ' ', '') LIKE UPPER(?)
          AND i.status IN ('–Ω–æ–≤–æ–µ', '–Ω–∞ —Å–≤—è–∑–∏', '–≤—Å—Ç—Ä–µ—á–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞', '–≤—Å—Ç—É–ø–∏–ª –≤ –∫–ª—É–±')
        LIMIT 1
    ");
    $stmt->execute(['%70MX%']);
    $invitation = $stmt->fetch();
    
    if ($invitation) {
        echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:<br>";
        echo "- –ù–æ–º–µ—Ä: " . $invitation['car_number'] . "<br>";
        echo "- –°—Ç–∞—Ç—É—Å: " . $invitation['invitation_status'] . "<br>";
    } else {
        echo "‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ<br>";
    }
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: " . $e->getMessage() . "<br>";
}

echo "<h2>‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω</h2>";
?> 